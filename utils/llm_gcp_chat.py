import streamlit as st
import pandas as pd
import re
import vertexai
from vertexai.preview.generative_models import GenerativeModel, Part

MODEL_NAME = "gemini-pro"
model = GenerativeModel(MODEL_NAME)

df= pd.read_csv('data/ga_source_medium_campaign.csv')
st.write(df.head())

def generation_config():
    return  {
        "max_output_tokens": 1024,
        "temperature": 0.2,
        "top_p": 0.95,
        "top_k": 40
    }


# Generate LLM response
def generate_insights(query,df):
    messages= prepare_prompt(query,df)
    responses = model.generate_content(messages,generation_config=generation_config(), stream=False)
    st.write(responses.text)
    """
    #code_blocks = re.findall(r"```(python)?(.*?)```", responses.text, re.DOTALL)
    # Strip leading and trailing whitespace and join the code blocks
    #code = "\n".join([block[1].strip() for block in code_blocks])
    if code:
        try:
            exec(code)
            st.set_option('deprecation.showPyplotGlobalUse', False)
            st.pyplot()
        except Exception as e:
            error_message = str(e)
            st.error(
                f"ðŸ“Ÿ Apologies, failed to execute the code due to the error: {error_message}"
            )
            st.warning(
            
                ðŸ“Ÿ Check the error message and the code executed above to investigate further.
                Pro tips:
                - Tweak your prompts to overcome the error 
                - Use simpler, concise words
                - Remember, I'm specialized in conveying information about the dataset. Give me context of your question and I can answer better.
            
            )
    else:
        st.write(response_text)
        st.success("Done")
   
    """
def prepare_prompt(query, df):
    column_names = ",".join(df.columns)
    prompt_content = f"""
            The dataset is ALREADY loaded into a DataFrame named 'df'. DO NOT load the data again. 
            The DataFrame has the following columns: {column_names}
            Provide final answer to user's question based on the data 
           Here's the question:
            {query}
            Here's the data:
            {df}
            - Make sure you reply in a business neutral tone based on the available data
            """
    return prompt_content

question_list = [
        'Which campaign had the highest Click-Through Rate (CTR)? Why might that be the case?',
        'Which campaign achieved the highest Conversion Rate? What factors could contribute to this?',
        'What is the Cost per Conversion for each campaign? How efficient are the campaigns in terms of cost?',
        'Which campaign generated the highest Return on Investment (ROI)? What elements of that campaign contributed to its success?',
        'How do the Cost per Click (CPC) metrics differ between the campaigns? What insights can be drawn from these differences?',
        'What is the overall revenue generated by each campaign? Which campaign contributed the most to the total revenue?',
        'Were there any noticeable trends or patterns in user behavior across the campaigns, considering factors like source and medium?How many rows are there?',
        'How do the Cost per Click (CPC) metrics differ between the campaigns? What insights can be drawn from these differences?',
        'Other']
q = st.selectbox('Select an example query:', question_list)

        # App logic
if q == 'Other':
    q = st.text_input('Enter your query:', placeholder = 'Enter query here ...')

generate_insights(q,df)

business_questions = [
    "How can we leverage the success of 'enterprisemarketingportal.google' to boost overall campaign performance?",
    "Are there specific actions we can take to optimize campaigns from other notable sources?",
    "What strategies can be implemented to enhance engagement in 'Referral' campaigns?"]

for b_q in business_questions:
    st.button(b_q,type="primary")